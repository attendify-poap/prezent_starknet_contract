type RangeCheck = RangeCheck;
type GasBuiltin = GasBuiltin;
type Pedersen = Pedersen;
type System = System;
type u32 = u32;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Tuple<core::bool> = Struct<ut@Tuple, core::bool>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<(core::bool,)> = Enum<ut@core::PanicResult::<(core::bool,)>, Tuple<core::bool>, Array<felt252>>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type core::PanicResult::<((),)> = Enum<ut@core::PanicResult::<((),)>, Tuple<Unit>, Array<felt252>>;
type StorageBaseAddress = StorageBaseAddress;
type core::result::Result::<core::bool, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::bool, core::array::Array::<core::felt252>>, core::bool, Array<felt252>>;
type StorageAddress = StorageAddress;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@core::array::Span::<core::felt252>, Snapshot<Array<felt252>>>;
type core::option::Option::<core::integer::u32> = Enum<ut@core::option::Option::<core::integer::u32>, u32, Unit>;
type BuiltinCosts = BuiltinCosts;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@Tuple, core::array::Span::<core::felt252>>;
type core::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@core::PanicResult::<(core::array::Span::<core::felt252>,)>, Tuple<core::array::Span::<core::felt252>>, Array<felt252>>;
type NonZero<felt252> = NonZero<felt252>;
type Box<felt252> = Box<felt252>;
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@core::option::Option::<core::box::Box::<@core::felt252>>, Box<felt252>, Unit>;

libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc function_call<user@prezent_contract_starknet::ERC165::ERC165::ERC165Impl::supports_interface> = function_call<user@prezent_contract_starknet::ERC165::ERC165::ERC165Impl::supports_interface>;
libfunc enum_match<core::PanicResult::<(core::bool,)>> = enum_match<core::PanicResult::<(core::bool,)>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<core::bool>> = struct_deconstruct<Tuple<core::bool>>;
libfunc struct_construct<Tuple<core::bool>> = struct_construct<Tuple<core::bool>>;
libfunc enum_init<core::PanicResult::<(core::bool,)>, 0> = enum_init<core::PanicResult::<(core::bool,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::bool,)>> = store_temp<core::PanicResult::<(core::bool,)>>;
libfunc enum_init<core::PanicResult::<(core::bool,)>, 1> = enum_init<core::PanicResult::<(core::bool,)>, 1>;
libfunc u32_const<4294967295> = u32_const<4294967295>;
libfunc dup<u32> = dup<u32>;
libfunc u32_eq = u32_eq;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::write> = function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::write>;
libfunc enum_match<core::PanicResult::<((),)>> = enum_match<core::PanicResult::<((),)>>;
libfunc drop<Tuple<Unit>> = drop<Tuple<Unit>>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;
libfunc drop<u32> = drop<u32>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<346770425315961274919268> = felt252_const<346770425315961274919268>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc u32_const<33540519> = u32_const<33540519>;
libfunc felt252_const<989614636378771756438190098033163128608681123647339651956776279282249037260> = felt252_const<989614636378771756438190098033163128608681123647339651956776279282249037260>;
libfunc function_call<user@core::hash::LegacyHashU32::hash> = function_call<user@core::hash::LegacyHashU32::hash>;
libfunc storage_base_address_from_felt252 = storage_base_address_from_felt252;
libfunc store_temp<StorageBaseAddress> = store_temp<StorageBaseAddress>;
libfunc function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::address> = function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::address>;
libfunc u32_const<0> = u32_const<0>;
libfunc function_call<user@core::starknet::storage_access::StorageAccessBool::read> = function_call<user@core::starknet::storage_access::StorageAccessBool::read>;
libfunc rename<core::result::Result::<core::bool, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::bool>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::bool>::unwrap_syscall>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc storage_address_from_base = storage_address_from_base;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>;
libfunc struct_deconstruct<Tuple<Unit>> = struct_deconstruct<Tuple<Unit>>;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc enable_ap_tracking = enable_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc function_call<user@core::serde::U32Serde::deserialize> = function_call<user@core::serde::U32Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u32>> = enum_match<core::option::Option::<core::integer::u32>>;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc disable_ap_tracking = disable_ap_tracking;
libfunc dup<core::bool> = dup<core::bool>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@core::serde::BoolSerde::serialize> = function_call<user@core::serde::BoolSerde::serialize>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243> = felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>;
libfunc function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::read> = function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::read>;
libfunc u32_to_felt252 = u32_to_felt252;
libfunc pedersen = pedersen;
libfunc storage_read_syscall = storage_read_syscall;
libfunc felt252_sub = felt252_sub;
libfunc felt252_is_zero = felt252_is_zero;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc enum_init<core::result::Result::<core::bool, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::bool, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::bool, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::bool, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::bool, core::array::Array::<core::felt252>>, 1>;
libfunc enum_match<core::result::Result::<core::bool, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>;
libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc rename<felt252> = rename<felt252>;
libfunc function_call<user@core::integer::Felt252TryIntoU32::try_into> = function_call<user@core::integer::Felt252TryIntoU32::try_into>;
libfunc enum_init<core::option::Option::<core::integer::u32>, 0> = enum_init<core::option::Option::<core::integer::u32>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u32>> = store_temp<core::option::Option::<core::integer::u32>>;
libfunc enum_init<core::option::Option::<core::integer::u32>, 1> = enum_init<core::option::Option::<core::integer::u32>, 1>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc dup<felt252> = dup<felt252>;
libfunc drop<felt252> = drop<felt252>;
libfunc function_call<user@core::serde::Felt252Serde::serialize> = function_call<user@core::serde::Felt252Serde::serialize>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc u32_try_from_felt252 = u32_try_from_felt252;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::option::Option::<core::integer::u32>> = rename<core::option::Option::<core::integer::u32>>;

store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<Pedersen>([2]) -> ([12]);
store_temp<System>([3]) -> ([13]);
store_temp<u32>([4]) -> ([14]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::ERC165Impl::supports_interface>([10], [11], [12], [13], [14]) -> ([5], [6], [7], [8], [9]);
enum_match<core::PanicResult::<(core::bool,)>>([9]) { fallthrough([15]) 17([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::bool>>([15]) -> ([17]);
struct_construct<Tuple<core::bool>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::bool,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([5]) -> ([20]);
store_temp<GasBuiltin>([6]) -> ([21]);
store_temp<Pedersen>([7]) -> ([22]);
store_temp<System>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::bool,)>>([19]) -> ([24]);
return([20], [21], [22], [23], [24]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::bool,)>, 1>([16]) -> ([25]);
store_temp<RangeCheck>([5]) -> ([26]);
store_temp<GasBuiltin>([6]) -> ([27]);
store_temp<Pedersen>([7]) -> ([28]);
store_temp<System>([8]) -> ([29]);
store_temp<core::PanicResult::<(core::bool,)>>([25]) -> ([30]);
return([26], [27], [28], [29], [30]);
u32_const<4294967295>() -> ([5]);
dup<u32>([4]) -> ([4], [6]);
u32_eq([6], [5]) { fallthrough() 33() };
branch_align() -> ();
struct_construct<Unit>() -> ([7]);
enum_init<core::bool, 0>([7]) -> ([8]);
store_temp<core::bool>([8]) -> ([9]);
jump() { 37() };
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
store_temp<core::bool>([11]) -> ([9]);
bool_not_impl([9]) -> ([12]);
store_temp<core::bool>([12]) -> ([12]);
bool_not_impl([12]) -> ([13]);
store_temp<core::bool>([13]) -> ([13]);
enum_match<core::bool>([13]) { fallthrough([14]) 73([15]) };
branch_align() -> ();
drop<Unit>([14]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
store_temp<RangeCheck>([0]) -> ([23]);
store_temp<GasBuiltin>([1]) -> ([24]);
store_temp<Pedersen>([2]) -> ([25]);
store_temp<System>([3]) -> ([26]);
store_temp<u32>([4]) -> ([27]);
store_temp<core::bool>([17]) -> ([28]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::write>([23], [24], [25], [26], [27], [28]) -> ([18], [19], [20], [21], [22]);
enum_match<core::PanicResult::<((),)>>([22]) { fallthrough([29]) 65([30]) };
branch_align() -> ();
drop<Tuple<Unit>>([29]) -> ();
struct_construct<Unit>() -> ([31]);
struct_construct<Tuple<Unit>>([31]) -> ([32]);
enum_init<core::PanicResult::<((),)>, 0>([32]) -> ([33]);
store_temp<RangeCheck>([18]) -> ([34]);
store_temp<GasBuiltin>([19]) -> ([35]);
store_temp<Pedersen>([20]) -> ([36]);
store_temp<System>([21]) -> ([37]);
store_temp<core::PanicResult::<((),)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([30]) -> ([39]);
store_temp<RangeCheck>([18]) -> ([40]);
store_temp<GasBuiltin>([19]) -> ([41]);
store_temp<Pedersen>([20]) -> ([42]);
store_temp<System>([21]) -> ([43]);
store_temp<core::PanicResult::<((),)>>([39]) -> ([44]);
return([40], [41], [42], [43], [44]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<u32>([4]) -> ();
array_new<felt252>() -> ([45]);
felt252_const<346770425315961274919268>() -> ([46]);
store_temp<felt252>([46]) -> ([46]);
array_append<felt252>([45], [46]) -> ([47]);
enum_init<core::PanicResult::<((),)>, 1>([47]) -> ([48]);
store_temp<RangeCheck>([0]) -> ([49]);
store_temp<GasBuiltin>([1]) -> ([50]);
store_temp<Pedersen>([2]) -> ([51]);
store_temp<System>([3]) -> ([52]);
store_temp<core::PanicResult::<((),)>>([48]) -> ([53]);
return([49], [50], [51], [52], [53]);
u32_const<33540519>() -> ([5]);
dup<u32>([4]) -> ([4], [6]);
u32_eq([6], [5]) { fallthrough() 95() };
branch_align() -> ();
struct_construct<Unit>() -> ([7]);
enum_init<core::bool, 0>([7]) -> ([8]);
store_temp<core::bool>([8]) -> ([9]);
jump() { 99() };
branch_align() -> ();
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
store_temp<core::bool>([11]) -> ([9]);
bool_not_impl([9]) -> ([12]);
store_temp<core::bool>([12]) -> ([12]);
bool_not_impl([12]) -> ([13]);
store_temp<core::bool>([13]) -> ([13]);
enum_match<core::bool>([13]) { fallthrough([14]) 135([15]) };
branch_align() -> ();
drop<Unit>([14]) -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 0>([16]) -> ([17]);
store_temp<RangeCheck>([0]) -> ([23]);
store_temp<GasBuiltin>([1]) -> ([24]);
store_temp<Pedersen>([2]) -> ([25]);
store_temp<System>([3]) -> ([26]);
store_temp<u32>([4]) -> ([27]);
store_temp<core::bool>([17]) -> ([28]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::write>([23], [24], [25], [26], [27], [28]) -> ([18], [19], [20], [21], [22]);
enum_match<core::PanicResult::<((),)>>([22]) { fallthrough([29]) 127([30]) };
branch_align() -> ();
drop<Tuple<Unit>>([29]) -> ();
struct_construct<Unit>() -> ([31]);
struct_construct<Tuple<Unit>>([31]) -> ([32]);
enum_init<core::PanicResult::<((),)>, 0>([32]) -> ([33]);
store_temp<RangeCheck>([18]) -> ([34]);
store_temp<GasBuiltin>([19]) -> ([35]);
store_temp<Pedersen>([20]) -> ([36]);
store_temp<System>([21]) -> ([37]);
store_temp<core::PanicResult::<((),)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([30]) -> ([39]);
store_temp<RangeCheck>([18]) -> ([40]);
store_temp<GasBuiltin>([19]) -> ([41]);
store_temp<Pedersen>([20]) -> ([42]);
store_temp<System>([21]) -> ([43]);
store_temp<core::PanicResult::<((),)>>([39]) -> ([44]);
return([40], [41], [42], [43], [44]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<u32>([4]) -> ();
array_new<felt252>() -> ([45]);
felt252_const<346770425315961274919268>() -> ([46]);
store_temp<felt252>([46]) -> ([46]);
array_append<felt252>([45], [46]) -> ([47]);
enum_init<core::PanicResult::<((),)>, 1>([47]) -> ([48]);
store_temp<RangeCheck>([0]) -> ([49]);
store_temp<GasBuiltin>([1]) -> ([50]);
store_temp<Pedersen>([2]) -> ([51]);
store_temp<System>([3]) -> ([52]);
store_temp<core::PanicResult::<((),)>>([48]) -> ([53]);
return([49], [50], [51], [52], [53]);
felt252_const<989614636378771756438190098033163128608681123647339651956776279282249037260>() -> ([3]);
store_temp<Pedersen>([1]) -> ([6]);
store_temp<felt252>([3]) -> ([7]);
store_temp<u32>([2]) -> ([8]);
function_call<user@core::hash::LegacyHashU32::hash>([6], [7], [8]) -> ([4], [5]);
storage_base_address_from_felt252([0], [5]) -> ([9], [10]);
store_temp<RangeCheck>([9]) -> ([11]);
store_temp<Pedersen>([4]) -> ([12]);
store_temp<StorageBaseAddress>([10]) -> ([13]);
return([11], [12], [13]);
store_temp<RangeCheck>([0]) -> ([8]);
store_temp<Pedersen>([2]) -> ([9]);
store_temp<u32>([4]) -> ([10]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::address>([8], [9], [10]) -> ([5], [6], [7]);
u32_const<0>() -> ([11]);
store_temp<GasBuiltin>([1]) -> ([15]);
store_temp<System>([3]) -> ([16]);
store_temp<u32>([11]) -> ([17]);
store_temp<StorageBaseAddress>([7]) -> ([18]);
function_call<user@core::starknet::storage_access::StorageAccessBool::read>([15], [16], [17], [18]) -> ([12], [13], [14]);
rename<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>([14]) -> ([20]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::bool>::unwrap_syscall>([20]) -> ([19]);
enum_match<core::PanicResult::<(core::bool,)>>([19]) { fallthrough([21]) 182([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::bool>>([21]) -> ([23]);
struct_construct<Tuple<core::bool>>([23]) -> ([24]);
enum_init<core::PanicResult::<(core::bool,)>, 0>([24]) -> ([25]);
store_temp<RangeCheck>([5]) -> ([26]);
store_temp<GasBuiltin>([12]) -> ([27]);
store_temp<Pedersen>([6]) -> ([28]);
store_temp<System>([13]) -> ([29]);
store_temp<core::PanicResult::<(core::bool,)>>([25]) -> ([30]);
return([26], [27], [28], [29], [30]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::bool,)>, 1>([22]) -> ([31]);
store_temp<RangeCheck>([5]) -> ([32]);
store_temp<GasBuiltin>([12]) -> ([33]);
store_temp<Pedersen>([6]) -> ([34]);
store_temp<System>([13]) -> ([35]);
store_temp<core::PanicResult::<(core::bool,)>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<u32>([4]) -> ([11]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::address>([9], [10], [11]) -> ([6], [7], [8]);
u32_const<0>() -> ([12]);
enum_match<core::bool>([5]) { fallthrough([13]) 201([14]) };
branch_align() -> ();
drop<Unit>([13]) -> ();
felt252_const<0>() -> ([15]);
store_temp<felt252>([15]) -> ([16]);
jump() { 205() };
branch_align() -> ();
drop<Unit>([14]) -> ();
felt252_const<1>() -> ([17]);
store_temp<felt252>([17]) -> ([16]);
storage_address_from_base([8]) -> ([18]);
store_temp<u32>([12]) -> ([12]);
storage_write_syscall([1], [3], [12], [18], [16]) { fallthrough([19], [20]) 215([21], [22], [23]) };
branch_align() -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([24]) -> ([25]);
store_temp<GasBuiltin>([19]) -> ([26]);
store_temp<System>([20]) -> ([27]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([25]) -> ([28]);
jump() { 220() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([23]) -> ([29]);
store_temp<GasBuiltin>([21]) -> ([26]);
store_temp<System>([22]) -> ([27]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([29]) -> ([28]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([28]) -> ([31]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([31]) -> ([30]);
enum_match<core::PanicResult::<((),)>>([30]) { fallthrough([32]) 233([33]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([32]) -> ([34]);
struct_construct<Tuple<Unit>>([34]) -> ([35]);
enum_init<core::PanicResult::<((),)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([6]) -> ([37]);
store_temp<GasBuiltin>([26]) -> ([38]);
store_temp<Pedersen>([7]) -> ([39]);
store_temp<System>([27]) -> ([40]);
store_temp<core::PanicResult::<((),)>>([36]) -> ([41]);
return([37], [38], [39], [40], [41]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([33]) -> ([42]);
store_temp<RangeCheck>([6]) -> ([43]);
store_temp<GasBuiltin>([26]) -> ([44]);
store_temp<Pedersen>([7]) -> ([45]);
store_temp<System>([27]) -> ([46]);
store_temp<core::PanicResult::<((),)>>([42]) -> ([47]);
return([43], [44], [45], [46], [47]);
revoke_ap_tracking() -> ();
enable_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 356([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::serde::U32Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u32>>([11]) { fallthrough([14]) 341([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
u32_const<0>() -> ([18]);
store_temp<u32>([17]) -> ([17]);
u32_eq([17], [18]) { fallthrough() 260() };
branch_align() -> ();
struct_construct<Unit>() -> ([19]);
enum_init<core::bool, 0>([19]) -> ([20]);
store_temp<core::bool>([20]) -> ([21]);
jump() { 264() };
branch_align() -> ();
struct_construct<Unit>() -> ([22]);
enum_init<core::bool, 1>([22]) -> ([23]);
store_temp<core::bool>([23]) -> ([21]);
bool_not_impl([21]) -> ([24]);
store_temp<core::bool>([24]) -> ([24]);
enum_match<core::bool>([24]) { fallthrough([25]) 323([26]) };
branch_align() -> ();
drop<Unit>([25]) -> ();
get_builtin_costs() -> ([27]);
store_temp<BuiltinCosts>([27]) -> ([27]);
withdraw_gas_all([9], [6], [27]) { fallthrough([28], [29]) 309([30], [31]) };
branch_align() -> ();
disable_ap_tracking() -> ();
store_temp<RangeCheck>([28]) -> ([37]);
store_temp<GasBuiltin>([29]) -> ([38]);
store_temp<Pedersen>([0]) -> ([39]);
store_temp<System>([3]) -> ([40]);
store_temp<u32>([14]) -> ([41]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::ERC165Impl::supports_interface>([37], [38], [39], [40], [41]) -> ([32], [33], [34], [35], [36]);
enum_match<core::PanicResult::<(core::bool,)>>([36]) { fallthrough([42]) 301([43]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::bool>>([42]) -> ([44]);
array_new<felt252>() -> ([45]);
dup<core::bool>([44]) -> ([46], [47]);
drop<core::bool>([46]) -> ();
store_temp<core::bool>([47]) -> ([50]);
store_temp<Array<felt252>>([45]) -> ([51]);
function_call<user@core::serde::BoolSerde::serialize>([50], [51]) -> ([48], [49]);
drop<Unit>([49]) -> ();
snapshot_take<Array<felt252>>([48]) -> ([52], [53]);
drop<Array<felt252>>([52]) -> ();
struct_construct<core::array::Span::<core::felt252>>([53]) -> ([54]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([54]) -> ([55]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([55]) -> ([56]);
store_temp<Pedersen>([34]) -> ([57]);
store_temp<RangeCheck>([32]) -> ([58]);
store_temp<GasBuiltin>([33]) -> ([59]);
store_temp<System>([35]) -> ([60]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([56]) -> ([61]);
return([57], [58], [59], [60], [61]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([43]) -> ([62]);
store_temp<Pedersen>([34]) -> ([63]);
store_temp<RangeCheck>([32]) -> ([64]);
store_temp<GasBuiltin>([33]) -> ([65]);
store_temp<System>([35]) -> ([66]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([62]) -> ([67]);
return([63], [64], [65], [66], [67]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<u32>([14]) -> ();
array_new<felt252>() -> ([68]);
felt252_const<375233589013918064796019>() -> ([69]);
store_temp<felt252>([69]) -> ([69]);
array_append<felt252>([68], [69]) -> ([70]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([70]) -> ([71]);
store_temp<Pedersen>([0]) -> ([72]);
store_temp<RangeCheck>([30]) -> ([73]);
store_temp<GasBuiltin>([31]) -> ([74]);
store_temp<System>([3]) -> ([75]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([71]) -> ([76]);
return([72], [73], [74], [75], [76]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([26]) -> ();
drop<u32>([14]) -> ();
store_temp<System>([3]) -> ([79]);
function_call<user@core::starknet::use_system_implicit>([79]) -> ([77], [78]);
drop<Unit>([78]) -> ();
array_new<felt252>() -> ([80]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([81]);
store_temp<felt252>([81]) -> ([81]);
array_append<felt252>([80], [81]) -> ([82]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([82]) -> ([83]);
store_temp<Pedersen>([0]) -> ([84]);
store_temp<RangeCheck>([9]) -> ([85]);
store_temp<GasBuiltin>([6]) -> ([86]);
store_temp<System>([77]) -> ([87]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([83]) -> ([88]);
return([84], [85], [86], [87], [88]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([89]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([90]);
store_temp<felt252>([90]) -> ([90]);
array_append<felt252>([89], [90]) -> ([91]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([91]) -> ([92]);
store_temp<Pedersen>([0]) -> ([93]);
store_temp<RangeCheck>([9]) -> ([94]);
store_temp<GasBuiltin>([6]) -> ([95]);
store_temp<System>([3]) -> ([96]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
branch_align() -> ();
disable_ap_tracking() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([98]);
felt252_const<375233589013918064796019>() -> ([99]);
store_temp<felt252>([99]) -> ([99]);
array_append<felt252>([98], [99]) -> ([100]);
enum_init<core::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([100]) -> ([101]);
store_temp<Pedersen>([0]) -> ([102]);
store_temp<RangeCheck>([7]) -> ([103]);
store_temp<GasBuiltin>([8]) -> ([104]);
store_temp<System>([3]) -> ([105]);
store_temp<core::PanicResult::<(core::array::Span::<core::felt252>,)>>([101]) -> ([106]);
return([102], [103], [104], [105], [106]);
u32_const<33540519>() -> ([5]);
dup<u32>([4]) -> ([4], [6]);
u32_eq([6], [5]) { fallthrough() 399() };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<GasBuiltin>([1]) -> ([13]);
store_temp<Pedersen>([2]) -> ([14]);
store_temp<System>([3]) -> ([15]);
store_temp<u32>([4]) -> ([16]);
function_call<user@prezent_contract_starknet::ERC165::ERC165::supported_interfaces::read>([12], [13], [14], [15], [16]) -> ([7], [8], [9], [10], [11]);
enum_match<core::PanicResult::<(core::bool,)>>([11]) { fallthrough([17]) 391([18]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::bool>>([17]) -> ([19]);
struct_construct<Tuple<core::bool>>([19]) -> ([20]);
enum_init<core::PanicResult::<(core::bool,)>, 0>([20]) -> ([21]);
store_temp<RangeCheck>([7]) -> ([22]);
store_temp<GasBuiltin>([8]) -> ([23]);
store_temp<Pedersen>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::PanicResult::<(core::bool,)>>([21]) -> ([26]);
return([22], [23], [24], [25], [26]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::bool,)>, 1>([18]) -> ([27]);
store_temp<RangeCheck>([7]) -> ([28]);
store_temp<GasBuiltin>([8]) -> ([29]);
store_temp<Pedersen>([9]) -> ([30]);
store_temp<System>([10]) -> ([31]);
store_temp<core::PanicResult::<(core::bool,)>>([27]) -> ([32]);
return([28], [29], [30], [31], [32]);
branch_align() -> ();
drop<u32>([4]) -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 1>([33]) -> ([34]);
struct_construct<Tuple<core::bool>>([34]) -> ([35]);
enum_init<core::PanicResult::<(core::bool,)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([0]) -> ([37]);
store_temp<GasBuiltin>([1]) -> ([38]);
store_temp<Pedersen>([2]) -> ([39]);
store_temp<System>([3]) -> ([40]);
store_temp<core::PanicResult::<(core::bool,)>>([36]) -> ([41]);
return([37], [38], [39], [40], [41]);
u32_to_felt252([2]) -> ([3]);
pedersen([0], [1], [3]) -> ([4], [5]);
store_temp<Pedersen>([4]) -> ([6]);
store_temp<felt252>([5]) -> ([7]);
return([6], [7]);
storage_address_from_base([3]) -> ([4]);
storage_read_syscall([0], [1], [2], [4]) { fallthrough([5], [6], [7]) 442([8], [9], [10]) };
branch_align() -> ();
felt252_const<0>() -> ([11]);
store_temp<felt252>([7]) -> ([7]);
felt252_sub([7], [11]) -> ([12]);
store_temp<felt252>([12]) -> ([12]);
store_temp<GasBuiltin>([5]) -> ([5]);
store_temp<System>([6]) -> ([6]);
felt252_is_zero([12]) { fallthrough() 431([13]) };
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::bool, 1>([14]) -> ([15]);
store_temp<core::bool>([15]) -> ([16]);
jump() { 436() };
branch_align() -> ();
drop<NonZero<felt252>>([13]) -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
store_temp<core::bool>([18]) -> ([16]);
bool_not_impl([16]) -> ([19]);
enum_init<core::result::Result::<core::bool, core::array::Array::<core::felt252>>, 0>([19]) -> ([20]);
store_temp<GasBuiltin>([5]) -> ([21]);
store_temp<System>([6]) -> ([22]);
store_temp<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>([20]) -> ([23]);
return([21], [22], [23]);
branch_align() -> ();
enum_init<core::result::Result::<core::bool, core::array::Array::<core::felt252>>, 1>([10]) -> ([24]);
store_temp<GasBuiltin>([8]) -> ([25]);
store_temp<System>([9]) -> ([26]);
store_temp<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>([24]) -> ([27]);
return([25], [26], [27]);
enum_match<core::result::Result::<core::bool, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 454([2]) };
branch_align() -> ();
struct_construct<Tuple<core::bool>>([1]) -> ([3]);
enum_init<core::PanicResult::<(core::bool,)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<(core::bool,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::bool,)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<(core::bool,)>>([6]) -> ([7]);
return([7]);
enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 464([2]) };
branch_align() -> ();
struct_construct<Tuple<Unit>>([1]) -> ([3]);
enum_init<core::PanicResult::<((),)>, 0>([3]) -> ([4]);
store_temp<core::PanicResult::<((),)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
enum_init<core::PanicResult::<((),)>, 1>([2]) -> ([6]);
store_temp<core::PanicResult::<((),)>>([6]) -> ([7]);
return([7]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 475([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 480() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 503([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::Felt252TryIntoU32::try_into>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u32>>([17]) { fallthrough([20]) 497([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u32>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u32>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u32>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u32>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u32>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u32>>([31]) -> ([34]);
return([32], [33], [34]);
rename<core::bool>([0]) -> ([2]);
enum_match<core::bool>([2]) { fallthrough([3]) 518([4]) };
branch_align() -> ();
drop<Unit>([3]) -> ();
felt252_const<0>() -> ([5]);
store_temp<felt252>([5]) -> ([6]);
jump() { 522() };
branch_align() -> ();
drop<Unit>([4]) -> ();
felt252_const<1>() -> ([7]);
store_temp<felt252>([7]) -> ([6]);
dup<felt252>([6]) -> ([8], [9]);
drop<felt252>([8]) -> ();
rename<felt252>([9]) -> ([12]);
store_temp<Array<felt252>>([1]) -> ([13]);
function_call<user@core::serde::Felt252Serde::serialize>([12], [13]) -> ([10], [11]);
drop<Unit>([11]) -> ();
struct_construct<Unit>() -> ([14]);
store_temp<Array<felt252>>([10]) -> ([15]);
store_temp<Unit>([14]) -> ([16]);
return([15], [16]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
u32_try_from_felt252([0], [1]) { fallthrough([2], [3]) 542([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u32>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::integer::u32>>([5]) -> ([7]);
jump() { 547() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::integer::u32>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::integer::u32>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::integer::u32>>([7]) -> ([11]);
return([10], [11]);
rename<felt252>([0]) -> ([2]);
array_append<felt252>([1], [2]) -> ([3]);
struct_construct<Unit>() -> ([4]);
store_temp<Array<felt252>>([3]) -> ([5]);
store_temp<Unit>([4]) -> ([6]);
return([5], [6]);

prezent_contract_starknet::ERC165::ERC165::supports_interface@0([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: u32) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::bool,)>);
prezent_contract_starknet::ERC165::ERC165::register_interface@25([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: u32) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<((),)>);
prezent_contract_starknet::ERC165::ERC165::deregister_interface@87([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: u32) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<((),)>);
prezent_contract_starknet::ERC165::ERC165::supported_interfaces::address@149([0]: RangeCheck, [1]: Pedersen, [2]: u32) -> (RangeCheck, Pedersen, StorageBaseAddress);
prezent_contract_starknet::ERC165::ERC165::supported_interfaces::read@159([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: u32) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::bool,)>);
prezent_contract_starknet::ERC165::ERC165::supported_interfaces::write@190([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: u32, [5]: core::bool) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<((),)>);
prezent_contract_starknet::ERC165::ERC165::__external::supports_interface@241([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::PanicResult::<(core::array::Span::<core::felt252>,)>);
prezent_contract_starknet::ERC165::ERC165::ERC165Impl::supports_interface@370([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: u32) -> (RangeCheck, GasBuiltin, Pedersen, System, core::PanicResult::<(core::bool,)>);
core::hash::LegacyHashU32::hash@411([0]: Pedersen, [1]: felt252, [2]: u32) -> (Pedersen, felt252);
core::starknet::storage_access::StorageAccessBool::read@416([0]: GasBuiltin, [1]: System, [2]: u32, [3]: StorageBaseAddress) -> (GasBuiltin, System, core::result::Result::<core::bool, core::array::Array::<core::felt252>>);
core::starknet::SyscallResultTraitImpl::<core::bool>::unwrap_syscall@448([0]: core::result::Result::<core::bool, core::array::Array::<core::felt252>>) -> (core::PanicResult::<(core::bool,)>);
core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall@458([0]: core::result::Result::<(), core::array::Array::<core::felt252>>) -> (core::PanicResult::<((),)>);
core::serde::U32Serde::deserialize@468([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u32>);
core::serde::BoolSerde::serialize@511([0]: core::bool, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::use_system_implicit@532([0]: System) -> (System, Unit);
core::integer::Felt252TryIntoU32::try_into@536([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u32>);
core::serde::Felt252Serde::serialize@550([0]: felt252, [1]: Array<felt252>) -> (Array<felt252>, Unit);
